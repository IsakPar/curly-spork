name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd="pg_isready -U postgres -d postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      CI: true
      NODE_ENV: test
      STORAGE_DRIVER: memory
      # Use internal service hostnames
      POSTGRES_URL: postgres://postgres:postgres@postgres:5432/postgres
      REDIS_URL: redis://redis:6379
      # JWT defaults to avoid schema failures
      JWT_SECRET: test-secret
      JWT_ISSUER: arqivo-auth
      JWT_AUDIENCE: arqivo-client
      # Disable captcha/externals in CI
      CAPTCHA_PROVIDER: none

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Print environment for debugging
        run: |
          node -v
          pnpm -v
          echo "WORKSPACE DIR: $(pwd)"
          ls -la

      - name: Wait for Postgres
        shell: bash
        run: |
          for i in {1..60}; do
            (echo > /dev/tcp/postgres/5432) >/dev/null 2>&1 && break
            sleep 2
          done
      - name: Wait for Redis
        shell: bash
        run: |
          for i in {1..60}; do
            (echo > /dev/tcp/redis/6379) >/dev/null 2>&1 && break
            sleep 2
          done

      - name: Typecheck
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Run tests with coverage
        run: pnpm test

      - name: Enforce coverage thresholds
        run: pnpm run check:coverage

