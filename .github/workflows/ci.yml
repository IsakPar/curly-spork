name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10
          --health-start-period=30s

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10
          --health-start-period=20s

    env:
      CI: true
      NODE_ENV: test
      STORAGE_DRIVER: memory
      # Use localhost with mapped ports (more reliable in GH Actions)
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      POSTGRES_URL: postgres://postgres:postgres@localhost:5432/postgres
      REDIS_URL: redis://localhost:6379
      # JWT defaults to avoid schema failures
      JWT_SECRET: test-secret-min-32-chars-long-for-security
      JWT_ISSUER: sanctum-auth
      JWT_AUDIENCE: sanctum-client
      # Disable captcha/externals in CI
      CAPTCHA_PROVIDER: none
      KMS_MODE: inmemory
      RATE_LIMIT_DISABLED: 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable corepack
        run: corepack enable

      - name: Prepare pnpm via corepack
        run: corepack prepare pnpm@9 --activate

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Print environment for debugging
        run: |
          node -v
          pnpm -v
          echo "WORKSPACE DIR: $(pwd)"
          ls -la

      - name: Install PostgreSQL and Redis clients
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y postgresql-client redis-tools
          echo "✅ Installed pg_isready and redis-cli"
          pg_isready --version
          redis-cli --version

      - name: Wait for Postgres
        run: |
          echo "⏳ Waiting for Postgres to be ready on localhost:5432..."
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres -d postgres >/dev/null 2>&1; then
              echo "✅ Postgres is ready!"
              PGPASSWORD=postgres psql -h localhost -U postgres -d postgres -c "SELECT version();"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "❌ Postgres failed to start"
              pg_isready -h localhost -p 5432 -U postgres -d postgres || true
              exit 1
            fi
            echo "  Attempt $i/30..."
            sleep 2
          done

      - name: Wait for Redis
        run: |
          echo "⏳ Waiting for Redis to be ready on localhost:6379..."
          for i in {1..30}; do
            if redis-cli -h localhost -p 6379 ping >/dev/null 2>&1; then
              echo "✅ Redis is ready!"
              redis-cli -h localhost -p 6379 INFO server | head -5
              break
            fi
            if [ $i -eq 30 ]; then
              echo "❌ Redis failed to start"
              redis-cli -h localhost -p 6379 ping || true
              exit 1
            fi
            echo "  Attempt $i/30..."
            sleep 2
          done

      - name: Typecheck
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Run tests with coverage
        run: pnpm test

      - name: Enforce coverage thresholds
        run: pnpm run check:coverage

