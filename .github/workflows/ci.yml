name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: auth
          POSTGRES_PASSWORD: auth
          POSTGRES_DB: auth
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -d auth -U auth" \
          --health-interval 5s \
          --health-timeout 5s \
          --health-retries 20

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" \
          --health-interval 5s \
          --health-timeout 5s \
          --health-retries 20

    env:
      CI: true
      NODE_ENV: test
      STORAGE_DRIVER: memory
      # For integration tests that need Postgres, this URL will be used if enabled
      POSTGRES_URL: postgres://auth:auth@localhost:5432/auth
      # Redis URL for any tests that use it
      REDIS_URL: redis://localhost:6379
      # JWT defaults to avoid schema failures
      JWT_SECRET: test-secret
      JWT_ISSUER: arqivo-auth
      JWT_AUDIENCE: arqivo-client
      # Disable captcha/externals in CI
      CAPTCHA_PROVIDER: none

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Print environment for debugging
        run: |
          node -v
          pnpm -v
          echo "WORKSPACE DIR: $(pwd)"
          ls -la

      - name: Wait for services (Postgres & Redis)
        run: pnpm dlx wait-on tcp:localhost:5432 tcp:localhost:6379

      - name: Typecheck
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Run tests with coverage
        run: pnpm test

      - name: Enforce coverage thresholds
        run: pnpm run check:coverage

